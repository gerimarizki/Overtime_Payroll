// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overtime_Payroll.Data;

#nullable disable

namespace Overtime_Payroll.Migrations
{
    [DbContext(typeof(OvertimeDbContext))]
    partial class OvertimeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Overtime_Payroll.Models.Account", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("expired_time");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit")
                        .HasColumnName("is_used");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("OTP")
                        .HasColumnType("int")
                        .HasColumnName("otp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("password");

                    b.HasKey("Guid");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("tb_m_accounts");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.AccountRole", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<Guid>("AccountGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_guid");

                    b.Property<Guid>("RoleGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_guid");

                    b.HasKey("Guid");

                    b.HasIndex("AccountGuid");

                    b.HasIndex("RoleGuid");

                    b.ToTable("tb_tr_account_roles");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Department", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Guid");

                    b.ToTable("tb_tr_departments");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birth_date");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("department_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<Guid>("EmployeeLevelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_level_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("gender");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("hiring_date");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("NIK")
                        .IsRequired()
                        .HasColumnType("nchar(6)")
                        .HasColumnName("nik");

                    b.Property<Guid>("OvertimeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("overtime_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<Guid?>("ReportTo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("report_to");

                    b.HasKey("Guid");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeLevelId");

                    b.HasIndex("NIK", "Email", "PhoneNumber")
                        .IsUnique();

                    b.ToTable("tb_m_employees");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.EmployeeLevel", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<int>("Allowance")
                        .HasColumnType("int")
                        .HasColumnName("allowance");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level");

                    b.Property<int>("Salary")
                        .HasColumnType("int")
                        .HasColumnName("salary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.HasKey("Guid");

                    b.ToTable("tb_tr_employee_levels");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Overtime", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("deskripsi");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("EndOvertime")
                        .HasColumnType("datetime2")
                        .HasColumnName("endOvertime");

                    b.Property<int>("Paid")
                        .HasColumnType("int")
                        .HasColumnName("Paid");

                    b.Property<DateTime>("StartOvertime")
                        .HasColumnType("datetime2")
                        .HasColumnName("startOvertime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("submitDate");

                    b.HasKey("Guid");

                    b.HasIndex("EmployeeId");

                    b.ToTable("tb_m_overtimes");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Payroll", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("pay_date");

                    b.Property<int>("PayrollCut")
                        .HasColumnType("int")
                        .HasColumnName("payroll_cut");

                    b.Property<int>("TotalSalary")
                        .HasColumnType("int")
                        .HasColumnName("total_salary");

                    b.HasKey("Guid");

                    b.HasIndex("EmployeeId");

                    b.ToTable("tb_tr_payrolls");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Role", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Guid");

                    b.ToTable("tb_m_roles");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Account", b =>
                {
                    b.HasOne("Overtime_Payroll.Models.Employee", "Employee")
                        .WithOne("Account")
                        .HasForeignKey("Overtime_Payroll.Models.Account", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.AccountRole", b =>
                {
                    b.HasOne("Overtime_Payroll.Models.Account", "Account")
                        .WithMany("AccountRoles")
                        .HasForeignKey("AccountGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_Payroll.Models.Role", "Role")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Employee", b =>
                {
                    b.HasOne("Overtime_Payroll.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Overtime_Payroll.Models.EmployeeLevel", "EmployeeLevel")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeLevel");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Overtime", b =>
                {
                    b.HasOne("Overtime_Payroll.Models.Employee", "Employee")
                        .WithMany("Overtimes")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Payroll", b =>
                {
                    b.HasOne("Overtime_Payroll.Models.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Account", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Department", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Overtimes");

                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.EmployeeLevel", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Overtime_Payroll.Models.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
